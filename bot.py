import telebot
import random
from dotenv import load_dotenv
import os
import model_classification

load_dotenv()
token = os.getenv('TOKEN')
bot = telebot.TeleBot(token)
print('Bot ready to use!')


@bot.message_handler(commands=['start'])
def start(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å")
    bot.send_message(message.chat.id,
                     '\nü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! ü§ñ'
                     '\n'
                     '\nüîçüéôÔ∏è –î–∞–Ω–Ω—ã–π –±–æ—Ç –º–æ–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—É—é —Ä–µ—á—å –Ω–∞ —Ñ–∞–∫—Ç —á–µ—Ç–∫–æ—Å—Ç–∏ –µ—ë –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è. üéôÔ∏èüîç'
                     '\n'
                     '\nüìå –í—ã–±–µ—Ä–µ—Ç–µ <b>¬´–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å¬ª</b> –≤ –º–µ–Ω—é –±–æ—Ç–∞. üìå',
                     reply_markup=markup, parse_mode="html")


def data_loader():
    @bot.message_handler(content_types=['voice'])
    def treatment(record):
        model_processing(bot.get_file(record.voice.file_id), record.chat.id)

    @bot.message_handler(content_types=['audio'])
    def treatment(record):
        model_processing(bot.get_file(record.audio.file_id), record.chat.id)

    @bot.message_handler(content_types=['text', 'photo', 'animation', 'game', 'story', 'video', 'document'])
    def error(message):
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞! –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –∞—É–¥–∏–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ'
                                          '\n<b>–≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è</b> –∏–ª–∏ <b>–∞—É–¥–∏–æ—Ñ–∞–π–ª–∞</b>.', parse_mode="html")


@bot.message_handler(regexp='–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å')
def next_record(message):
    bot.send_message(message.chat.id, '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∑–∞–ø–∏—Å—å.')
    data_loader()


def model_processing(file_info, chat_id):
    path = f'data/users/{chat_id}'
    os.makedirs(path, exist_ok=True)
    with open(path + f'/{chat_id}.wav', 'wb') as f:
        f.write(bot.download_file(file_info.file_path))

    prediction_values = model_classification.start(path + f'/{chat_id}.wav').ravel().tolist()
    discrepancy = prediction_values[1] - prediction_values[0]
    print(discrepancy)

    if (discrepancy < 0.393) and (discrepancy > -0.4):
        bot.send_message(chat_id, '–ê—É–¥–∏–æ–∑–∞–ø–∏—Å—å —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–æ—Ä–º–∞–ª—å–Ω—É—é —Ä—É—Å—Å–∫—É—é —Ä–µ—á—å.')
    elif discrepancy > 0.393:
        bot.send_message(chat_id, '–ê—É–¥–∏–æ—Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–Ω–æ—Ä–º–∞–ª—å–Ω—É—é —Ä—É—Å—Å–∫—É—é —Ä–µ—á—å.')
    elif discrepancy < -0.4:
        bot.send_message(chat_id, '–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª.')

    data_loader()


bot.infinity_polling()